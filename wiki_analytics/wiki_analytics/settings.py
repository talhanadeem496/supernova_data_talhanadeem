"""
Django settings for wiki_analytics project.

Generated by 'django-admin startproject' using Django 3.2.18.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os
import datetime
from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
dotenv_path = os.path.join(BASE_DIR, '.env')
load_dotenv(dotenv_path)
MY_BASE_URL = os.environ.get('MY_BASE_URL')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5!0#!9sy%hu#zvunly@b511(@qeb&)$%r5y6w1&c4igj)=)^vz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*", ]

CORS_ORIGIN_ALLOW_ALL = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # packages
    'corsheaders',
    'drf_yasg',
    # 'django_rq',
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
    'rest_auth',
    'auditlog',
    'django_celery_beat',
    'django_celery_results',
    # 'django_filters',
    'django_mailbox',
    #apps
    'utils',
    'frequency_analytics_app'

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'auditlog.middleware.AuditlogMiddleware',
]

ROOT_URLCONF = 'wiki_analytics.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wiki_analytics.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Karachi'

USE_I18N = True

USE_L10N = True

# USE_TZ = True
USE_TZ = False

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


# #Redis Channels
# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'channels_redis.core.RedisChannelLayer',
#         'CONFIG': {
#             "hosts": [('$tech1','127.0.0.1', 6379)],
#         },
#     },
# }

# #Redis URL for connection
# #REDIS
# REDIS_URL = "redis://:{password}@{host}:{port}/0".format(password = os.environ.get('REDIS_PASSWORD'),
#                                                 host=os.environ.get('REDIS_HOST', 'localhost'),
#                                              port=os.environ.get('REDIS_PORT', '6379'))


# #Redis Queues
# RQ_QUEUES = {
#     'default': {

#         'HOST': 'localhost',
#         'PORT': 6379,
#         'DB': 1,
#         'PASSWORD': '$tech1',
#         'DEFAULT_TIMEOUT': 360,
#         'LOCATION':REDIS_URL,
#     },
#     'detections': {

#             'HOST': 'localhost',
#             'PORT': 6379,
#             'DB': 1,
#             'PASSWORD': '$tech1',
#             'DEFAULT_TIMEOUT': 360,
#             'LOCATION':REDIS_URL,
#         },
#     'logs': {

#                 'HOST': 'localhost',
#                 'PORT': 6379,
#                 'DB': 1,
#                 'PASSWORD': '$tech1',
#                 'DEFAULT_TIMEOUT': 360,
#                 'LOCATION':REDIS_URL,
#             },
#     'with-sentinel': {
#         'SENTINELS': [('localhost', 26736), ('localhost', 26737)],
#         'MASTER_NAME': 'redismaster',
#         'DB': 0,
#         'PASSWORD': '$tech1',
#         'SOCKET_TIMEOUT': None,
#         'CONNECTION_KWARGS': {
#             'socket_connect_timeout': 0.3
#         },
#         'LOCATION':REDIS_URL,
#     },
#     'high': {
#         'URL': os.environ.get('REDIS_URL', 'redis://:$tech1@localhost:6379/0'), # If you're on Heroku
#         'DEFAULT_TIMEOUT': 500,
#     },
#     'low': {
#         'HOST': 'localhost',
#         'PORT': 6379,
#         'DB': 0,
#     }
# }


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
MEDIA_URL = '/public/'
MEDIA_ROOT = os.path.join(BASE_DIR, "public/")
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

ENCRYPT_KEY = os.environ.get('ENCRYPT_KEY')

#default auth model
# AUTH_USER_MODEL = 'users.User'

#SIMPLE JWT SETTINGS
REST_FRAMEWORK = {
    'EXCEPTION_HANDLER': 'utils.exceptionhandler.custom_exception_handler',
    'NON_FIELD_ERRORS_KEY': 'error',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'utils.common.ShowList_StandardResultsSetPagination',
    'DEFAULT_SCHEMA_CLASS':'rest_framework.schemas.coreapi.AutoSchema'
}

# JWT Token configuration
SIMPLE_JWT = {

    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(hours=24),
    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=30),
}




# #CELERY_SETTINGS
# CELERY_RESULT_EXPIRES = 1800
# CELERY_TASK_RESULT_EXPIRES = 1800
# CELERY_BROKER_URL = REDIS_URL
# CELERY_RESULT_BACKEND = REDIS_URL

# # CELERY_RESULT_BACKEND = 'django-db'
# # CELERY_TASK_ALWAYS_EAGER  = True
# CELERY_ALWAYS_EAGER = False
# CELERY_ACCEPT_CONTENT = ['application/json']
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_TIMEZONE = 'Asia/Karachi'
# # CELERY_TIMEZONE = 'UTC'
# CELERY_ENABLE_UTC = True
# CELERY_FLOWER_URL = f"http://{os.environ.get('REDIS_HOST')}:5555"
# # REDIS_HOST = "10.0.0.189"
# # CELERY_FLOWER_URL = f"http://{REDIS_HOST}:5555"

# # CELERY_STORE_ERRORS_EVEN_IF_IGNORED = True
# # CELERY_BEAT_SETTINGS
# # CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'
# BROKER_HEARTBEAT = 1
# CRONJOB_EMAIL_LISTNER_SECONDS = int(os.environ.get('CRONJOB_EMAIL_LISTNER_SECONDS'))

# #Celery Beat Periodic Tasks
# CELERY_BEAT_SCHEDULE = {
#       'task-listen-incoming-emails': {
#         'task': 'email_management_facility.tasks.listen_incoming_emails',
#         # 'schedule': crontab(minute=0, hour='*/1'),
#         'schedule': CRONJOB_EMAIL_LISTNER_SECONDS, #sec
#       }
# }
# # CACHE
# CACHES = {
#     'default': {
#         'BACKEND': 'django_redis.cache.RedisCache',
#         'LOCATION': REDIS_URL,
#         'OPTIONS': {
#                 'CLIENT_CLASS': 'django_redis.client.DefaultClient',
#                 'PASSWORD': os.environ.get('REDIS_PASSWORD')
#         },
#         'KEY_PREFIX': 'example'
#     }
# }

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = os.environ.get('EMAIL_HOST')
# EMAIL_PORT = os.environ.get('EMAIL_PORT')
# EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS')
# # EMAIL_USE_SSL = os.environ.get('EMAIL_USE_SSL')
# EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
